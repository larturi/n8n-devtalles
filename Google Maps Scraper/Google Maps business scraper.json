{
  "name": "Google Maps business scraper",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 30
            }
          ]
        }
      },
      "id": "dd61182d-d2eb-42ca-9d7a-cf21dd11a8e6",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -2080,
        336
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "de704919-205a-470f-a417-b297fbbdbaf8",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              },
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "SUCCEEDED"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "205d2665-6407-4c63-817a-28ac95070ee3",
      "name": "Loop Until Complete",
      "type": "n8n-nodes-base.if",
      "position": [
        -848,
        336
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1lFN02r3DMYTqj5Ybuun18oP15EeSYfQeISpQZ8zi5Bk",
          "mode": "list",
          "cachedResultName": "Google Maps Scraper",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lFN02r3DMYTqj5Ybuun18oP15EeSYfQeISpQZ8zi5Bk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Query",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lFN02r3DMYTqj5Ybuun18oP15EeSYfQeISpQZ8zi5Bk/edit#gid=0"
        },
        "options": {}
      },
      "id": "1216423d-737d-4c63-98ac-5e7091f21b84",
      "name": "Read Pending Queries",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        -1872,
        336
      ],
      "typeVersion": 4.2,
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "FoUN4lufK7HcfeDz",
          "name": "Google Sheet: lea.arturi@gmail.com"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.apify.com/v2/acts/compass~crawler-google-places/runs",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"searchStringsArray\": [\n    \"{{ $json.Query }}\"\n  ],\n  \"locationQuery\": \"{{ $json.Location }}\",\n  \"maxCrawledPlacesPerSearch\": 15,\n  \"language\": \"en\",\n  \"maximumLeadsEnrichmentRecords\": 0,\n  \"maxImages\": 0\n}",
        "options": {}
      },
      "id": "8f9effd0-99b9-4216-aa7f-8fa2c7fc941c",
      "name": "Start Apify Scraping Job",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1648,
        336
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpBearerAuth": {
          "id": "J1GP8pGFqzFkIjYP",
          "name": "Apify"
        }
      }
    },
    {
      "parameters": {},
      "id": "fa2101f6-8353-436f-aa9e-506a0fbd8365",
      "name": "Wait for Job Succeed",
      "type": "n8n-nodes-base.wait",
      "position": [
        -1280,
        336
      ],
      "webhookId": "97a65079-8ee5-45a2-9de0-afd263bbbe34",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "url": "=https://api.apify.com/v2/actor-runs/{{ $json.data.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "timeout": 10000
        }
      },
      "id": "4a5a5472-6cea-4ab1-b157-50443d7c22ae",
      "name": "Check Scraping Status",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1056,
        272
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpBearerAuth": {
          "id": "J1GP8pGFqzFkIjYP",
          "name": "Apify"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.apify.com/v2/datasets/{{ $json.data.defaultDatasetId }}/items",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "timeout": 10000
        }
      },
      "id": "0b02ae74-600a-4968-855e-b5feca8a0bce",
      "name": "Fetch Scraped Results",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -624,
        336
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpBearerAuth": {
          "id": "J1GP8pGFqzFkIjYP",
          "name": "Apify"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1lFN02r3DMYTqj5Ybuun18oP15EeSYfQeISpQZ8zi5Bk",
          "mode": "list",
          "cachedResultName": "Google Maps Scraper",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lFN02r3DMYTqj5Ybuun18oP15EeSYfQeISpQZ8zi5Bk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1948906848,
          "mode": "list",
          "cachedResultName": "Data",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lFN02r3DMYTqj5Ybuun18oP15EeSYfQeISpQZ8zi5Bk/edit#gid=1948906848"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "searchString": "={{ $('Read Pending Queries').item.json.Query }}",
            "title": "={{ $json.title }}",
            "categoryName": "={{ $json.categoryName }}",
            "address": "={{ $json.address }}",
            "phone": "={{ $json.phoneUnformatted ?? $json.phone ?? '' }}",
            "website": "={{ $json.website }}",
            "status": "={{ $('Read Pending Queries').item.json.Status }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "searchString",
              "displayName": "searchString",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "categoryName",
              "displayName": "categoryName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "address",
              "displayName": "address",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "website",
              "displayName": "website",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "15ceaf51-7f33-4cbd-b2bd-50694dac25fb",
      "name": "Save Business Data",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        -400,
        336
      ],
      "typeVersion": 4.6,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "FoUN4lufK7HcfeDz",
          "name": "Google Sheet: lea.arturi@gmail.com"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "2218f0be-2c48-4a1a-bd21-8bdb67c495a1",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $json.website }}",
              "rightValue": ""
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c8e63f5a-95f5-4be1-8cea-a84dde0a0f2f",
      "name": "Filter Businesses with Websites",
      "type": "n8n-nodes-base.filter",
      "position": [
        -176,
        336
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "80c0711f-fc15-49b5-9d95-2c80ce17c000",
      "name": "Batch Processing Logic",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        192,
        336
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.firecrawl.dev/v1/scrape",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"url\": \"{{ $json.website }}\",\n  \"formats\": [\n    \"html\"\n  ]\n}",
        "options": {}
      },
      "id": "de557964-d1ce-4fa3-82d7-e14fbf8dfef5",
      "name": "Scrape Website Content",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        464,
        240
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpBearerAuth": {
          "id": "STonkO8U3u1WfjL7",
          "name": "Bearer Auth Firecrawl"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// N8N Code Node - Extract emails, LinkedIn, Facebook, Instagram for single item\nconst item = $input.first();\n\n// Get the text content to search (adjust field names as needed)\nconst textContent = item.json.data.html;\n\n// Initialize result object\nconst result = {\n  website: $('Batch Processing Logic').first().json.website,\n  emails: \"None\",\n  linkedin: \"None\", \n  facebook: \"None\",\n  instagram: \"None\",\n  twitter: \"None\"\n};\n\n// Email extraction regex - matches common email patterns\nconst emailRegex = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/gi;\nconst emails = textContent.match(emailRegex);\n\nif (emails && emails.length > 0) {\n  // Remove duplicates and filter out common non-email matches\n  const uniqueEmails = [...new Set(emails)].filter(email => {\n    const lowerEmail = email.toLowerCase();\n    return !lowerEmail.includes('example.com') && \n           !lowerEmail.includes('test@') &&\n           !lowerEmail.includes('noreply@') &&\n           !lowerEmail.includes('no-reply@') &&\n           lowerEmail.length > 5;\n  });\n  \n  if (uniqueEmails.length > 0) {\n    result.emails = uniqueEmails.length === 1 ? uniqueEmails[0] : uniqueEmails.join(', ');\n  }\n}\n\n// LinkedIn extraction - improved pattern\nconst linkedinRegex = /(?:https?:\\/\\/)?(?:www\\.)?linkedin\\.com\\/(?:in\\/|company\\/|pub\\/)[a-zA-Z0-9\\-._]+\\/?/gi;\nconst linkedinMatches = textContent.match(linkedinRegex);\nif (linkedinMatches && linkedinMatches.length > 0) {\n  const cleanLinkedin = linkedinMatches[0].replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, 'https://www.');\n  result.linkedin = cleanLinkedin;\n}\n\n// Facebook extraction - improved to match numeric IDs and usernames\nconst facebookRegex = /(?:https?:\\/\\/)?(?:www\\.|m\\.|mobile\\.)?facebook\\.com\\/(?:[^\\/\\s]+\\/)*[^\\/\\s?#]+/gi;\nconst facebookMatches = textContent.match(facebookRegex);\nif (facebookMatches && facebookMatches.length > 0) {\n  const cleanFacebook = facebookMatches[0].replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, 'https://www.');\n  result.facebook = cleanFacebook;\n}\n\n// Instagram extraction - improved to match various URL formats\nconst instagramRegex = /(?:https?:\\/\\/)?(?:www\\.)?instagram\\.com\\/[a-zA-Z0-9\\-._]+\\/?/gi;\nconst instagramMatches = textContent.match(instagramRegex);\nif (instagramMatches && instagramMatches.length > 0) {\n  const cleanInstagram = instagramMatches[0].replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, 'https://www.');\n  result.instagram = cleanInstagram;\n}\n\n// Twitter/X extraction - improved to match usernames properly\nconst twitterRegex = /(?:https?:\\/\\/)?(?:www\\.)?(?:twitter\\.com|x\\.com)\\/[a-zA-Z0-9_]+\\/?/gi;\nconst twitterMatches = textContent.match(twitterRegex);\nif (twitterMatches && twitterMatches.length > 0) {\n  const cleanTwitter = twitterMatches[0].replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, 'https://www.');\n  result.twitter = cleanTwitter;\n}\n\n// Alternative extraction for social handles without full URLs\n// Look for @username patterns for Instagram and Twitter\nif (result.instagram === \"None\") {\n  const igHandleRegex = /@([a-zA-Z0-9._]{1,30})/gi;\n  const igHandles = textContent.match(igHandleRegex);\n  if (igHandles && igHandles.length > 0) {\n    const username = igHandles[0].replace('@', '');\n    if (username.length > 0 && !username.includes(' ')) {\n      result.instagram = `https://www.instagram.com/${username}`;\n    }\n  }\n}\n\n// Look for Twitter handles without full URLs\nif (result.twitter === \"None\") {\n  const twitterHandleRegex = /@([a-zA-Z0-9_]{1,15})/gi;\n  const twitterHandles = textContent.match(twitterHandleRegex);\n  if (twitterHandles && twitterHandles.length > 0) {\n    const username = twitterHandles[0].replace('@', '');\n    if (username.length > 0 && !username.includes(' ')) {\n      result.twitter = `https://www.x.com/${username}`;\n    }\n  }\n}\n\n// Clean up URLs - remove trailing slashes and parameters\n['linkedin', 'facebook', 'instagram', 'twitter'].forEach(platform => {\n  if (result[platform] !== \"None\") {\n    result[platform] = result[platform].split('?')[0].split('#')[0].replace(/\\/$/, '');\n  }\n});\n\nreturn result;"
      },
      "id": "4a7016fc-98a0-4f0b-8ae7-02ee00159358",
      "name": "Extract Contact Information",
      "type": "n8n-nodes-base.code",
      "position": [
        688,
        240
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1lFN02r3DMYTqj5Ybuun18oP15EeSYfQeISpQZ8zi5Bk",
          "mode": "list",
          "cachedResultName": "Google Maps Scraper",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lFN02r3DMYTqj5Ybuun18oP15EeSYfQeISpQZ8zi5Bk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 2056137853,
          "mode": "list",
          "cachedResultName": "Details",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lFN02r3DMYTqj5Ybuun18oP15EeSYfQeISpQZ8zi5Bk/edit#gid=2056137853"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "website": "={{ $json.website }}",
            "emails": "={{ $json.emails }}",
            "linkedin": "={{ $json.linkedin }}",
            "facebook": "={{ $json.facebook }}",
            "instagram": "={{ $json.instagram }}",
            "twitter": "={{ $json.twitter }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "website",
              "displayName": "website",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "emails",
              "displayName": "emails",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "linkedin",
              "displayName": "linkedin",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "facebook",
              "displayName": "facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "instagram",
              "displayName": "instagram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "twitter",
              "displayName": "twitter",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "409391e8-e3cc-4d75-8a83-8741230ef8eb",
      "name": "Save Contact Details",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        912,
        240
      ],
      "typeVersion": 4.6,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "FoUN4lufK7HcfeDz",
          "name": "Google Sheet: lea.arturi@gmail.com"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1lFN02r3DMYTqj5Ybuun18oP15EeSYfQeISpQZ8zi5Bk",
          "mode": "list",
          "cachedResultName": "Google Maps Scraper",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lFN02r3DMYTqj5Ybuun18oP15EeSYfQeISpQZ8zi5Bk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Query",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1lFN02r3DMYTqj5Ybuun18oP15EeSYfQeISpQZ8zi5Bk/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "row_number": "={{ $('Read Pending Queries').item.json.row_number }}",
            "Status": "=true"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "Query",
              "displayName": "Query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Location",
              "displayName": "Location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "6a1cf38f-357a-44cc-9e61-3fd12fe25146",
      "name": "Mark as Processed",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        1136,
        304
      ],
      "typeVersion": 4.6,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "FoUN4lufK7HcfeDz",
          "name": "Google Sheet: lea.arturi@gmail.com"
        }
      }
    },
    {
      "parameters": {
        "content": "## 🚀 INITIALIZATION PHASE\n- Triggers every 30 minutes\n- Reads unprocessed records from [Google Sheet](https://docs.google.com/spreadsheets/d/1DHezdcetT0c3Ie1xB3z3jDc5WElsLN87K4J9EQDef9g/edit?usp=sharing)\n- Starts Google Places scraper for restaurants\n- Waits for completion",
        "height": 532,
        "width": 640,
        "color": 4
      },
      "id": "fccb8df7-d479-4140-b2bf-b656a4115603",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2128,
        96
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## 📊 DATA COLLECTION PHASE\n- Monitors scraper job status\n- Loops until job completes\n- Fetches scraped restaurant data\n- Saves to \"Data\" sheet in [Google Sheets](https://docs.google.com/spreadsheets/d/1DHezdcetT0c3Ie1xB3z3jDc5WElsLN87K4J9EQDef9g/edit?usp=sharing)",
        "height": 532,
        "width": 1316
      },
      "id": "bb8c7300-d2d3-4aba-a8af-cee599f336f6",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1360,
        96
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## 🌐 WEBSITE PROCESSING PHASE\n- Filters restaurants with valid websites\n- Loops through each website\n- Scrapes website content with Firecrawl\n- Extracts contact information (emails, social media)\n- Saves to \"Details\" sheet and marks as processed",
        "height": 728,
        "width": 1236,
        "color": 6
      },
      "id": "cb4119c2-99a6-4dd6-9e9f-2a9a9ddb0797",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        112,
        16
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## 🔄 LOOPS\n**Status Check Loop**: Continues until scraper job is complete\n**Website Processing Loop**: Processes each restaurant website individually",
        "height": 120,
        "width": 580
      },
      "id": "22dc7155-fe8d-4a43-955c-358cce688a93",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        448,
        544
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {
    "Read Pending Queries": [
      {
        "json": {
          "row_number": 2,
          "Query": "restaurants",
          "Location": "Ciudad Autónoma de Buenos Aires",
          "Status": false,
          "col_4": "",
          "col_5": "",
          "col_6": "",
          "col_7": "",
          "col_8": "You can make a copy of this sheet and use your google sheet - if you need help you can reach out to nchoudhary110792@gmail.com"
        }
      }
    ]
  },
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Read Pending Queries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mark as Processed": {
      "main": [
        [
          {
            "node": "Batch Processing Logic",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Business Data": {
      "main": [
        [
          {
            "node": "Filter Businesses with Websites",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Until Complete": {
      "main": [
        [
          {
            "node": "Wait for Job Succeed",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Fetch Scraped Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Pending Queries": {
      "main": [
        [
          {
            "node": "Start Apify Scraping Job",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Contact Details": {
      "main": [
        [
          {
            "node": "Mark as Processed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Job Succeed": {
      "main": [
        [
          {
            "node": "Check Scraping Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Scraping Status": {
      "main": [
        [
          {
            "node": "Loop Until Complete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Scraped Results": {
      "main": [
        [
          {
            "node": "Save Business Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Batch Processing Logic": {
      "main": [
        [],
        [
          {
            "node": "Scrape Website Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape Website Content": {
      "main": [
        [
          {
            "node": "Extract Contact Information",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start Apify Scraping Job": {
      "main": [
        [
          {
            "node": "Wait for Job Succeed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Contact Information": {
      "main": [
        [
          {
            "node": "Save Contact Details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Businesses with Websites": {
      "main": [
        [
          {
            "node": "Batch Processing Logic",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "32d93dc1-4c1c-40ef-b38b-1929b6a0366a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ec034f4ec00924227e26a740287d46cdb2435d7c6eed6e6242f82f145235dfc5"
  },
  "id": "blKorHYBfaM2KQnX",
  "tags": []
}